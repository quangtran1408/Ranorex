///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Excel_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InputHeader recording.
    /// </summary>
    [TestModule("dd7d1f89-4398-4d98-81e1-25c183fc71aa", ModuleType.Recording, 1)]
    public partial class InputHeader : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Excel_TestRepository repository.
        /// </summary>
        public static Excel_TestRepository repo = Excel_TestRepository.Instance;

        static InputHeader instance = new InputHeader();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InputHeader()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InputHeader Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Row1.CellA1' at 25;11.", repo.Excel.Row1.CellA1Info, new RecordItemIndex(0));
            repo.Excel.Row1.CellA1.Click("25;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Ho va Ten' with focus on 'Excel.Row1.CellA1'.", repo.Excel.Row1.CellA1Info, new RecordItemIndex(1));
            repo.Excel.Row1.CellA1.PressKeys("Ho va Ten");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(2));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Row1.CellB1' at 30;13.", repo.Excel.Row1.CellB1Info, new RecordItemIndex(3));
            repo.Excel.Row1.CellB1.Click("30;13");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Ma nhan vien' with focus on 'Excel.Row1.CellB1'.", repo.Excel.Row1.CellB1Info, new RecordItemIndex(4));
            repo.Excel.Row1.CellB1.PressKeys("Ma nhan vien");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(5));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Row1.CellC1' at 26;12.", repo.Excel.Row1.CellC1Info, new RecordItemIndex(6));
            repo.Excel.Row1.CellC1.Click("26;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Tuoi' with focus on 'Excel.Row1.CellC1'.", repo.Excel.Row1.CellC1Info, new RecordItemIndex(7));
            repo.Excel.Row1.CellC1.PressKeys("Tuoi");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(8));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Row1.CellD1' at 32;11.", repo.Excel.Row1.CellD1Info, new RecordItemIndex(9));
            repo.Excel.Row1.CellD1.Click("32;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Nghe nghiep' with focus on 'Excel.Row1.CellD1'.", repo.Excel.Row1.CellD1Info, new RecordItemIndex(10));
            repo.Excel.Row1.CellD1.PressKeys("Nghe nghiep");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(11));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Excel.Row2.CellA2' at Center.", repo.Excel.Row2.CellA2Info, new RecordItemIndex(12));
            repo.Excel.Row2.CellA2.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
