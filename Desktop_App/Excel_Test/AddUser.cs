///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Excel_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddUser recording.
    /// </summary>
    [TestModule("6ece5400-1cda-4c75-bd11-77c7ccd453cc", ModuleType.Recording, 1)]
    public partial class AddUser : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Excel_TestRepository repository.
        /// </summary>
        public static Excel_TestRepository repo = Excel_TestRepository.Instance;

        static AddUser instance = new AddUser();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddUser()
        {
            hovaten = "";
            manhanvien = "";
            tuoi = "";
            nghenghiep = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddUser Instance
        {
            get { return instance; }
        }

#region Variables

        string _hovaten;

        /// <summary>
        /// Gets or sets the value of variable hovaten.
        /// </summary>
        [TestVariable("9a6b6800-caa5-4b68-b8a0-df69b42410d0")]
        public string hovaten
        {
            get { return _hovaten; }
            set { _hovaten = value; }
        }

        string _manhanvien;

        /// <summary>
        /// Gets or sets the value of variable manhanvien.
        /// </summary>
        [TestVariable("51c0d41d-22a8-43fa-91d5-341e9142386f")]
        public string manhanvien
        {
            get { return _manhanvien; }
            set { _manhanvien = value; }
        }

        string _tuoi;

        /// <summary>
        /// Gets or sets the value of variable tuoi.
        /// </summary>
        [TestVariable("8c53c959-26ab-4c30-89cd-64443f7d1093")]
        public string tuoi
        {
            get { return _tuoi; }
            set { _tuoi = value; }
        }

        string _nghenghiep;

        /// <summary>
        /// Gets or sets the value of variable nghenghiep.
        /// </summary>
        [TestVariable("33ca42d8-d598-4ed3-91d4-c910cf330cd0")]
        public string nghenghiep
        {
            get { return _nghenghiep; }
            set { _nghenghiep = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$hovaten'.", new RecordItemIndex(0));
            Keyboard.Press(hovaten);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(1));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$manhanvien'.", new RecordItemIndex(2));
            Keyboard.Press(manhanvien);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$tuoi'.", new RecordItemIndex(4));
            Keyboard.Press(tuoi);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$nghenghiep'.", new RecordItemIndex(6));
            Keyboard.Press(nghenghiep);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(7));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
