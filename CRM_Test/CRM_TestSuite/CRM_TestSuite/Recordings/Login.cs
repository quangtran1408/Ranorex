///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CRM_TestSuite.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Login recording.
    /// </summary>
    [TestModule("62cf70f1-45ee-4368-9fcd-cfaebca5fe99", ModuleType.Recording, 1)]
    public partial class Login : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CRM_TestSuite.CRM_TestSuiteRepository repository.
        /// </summary>
        public static global::CRM_TestSuite.CRM_TestSuiteRepository repo = global::CRM_TestSuite.CRM_TestSuiteRepository.Instance;

        static Login instance = new Login();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Login()
        {
            varUsername = "";
            varPassword = "Lmkr0000000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Login Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable varUsername.
        /// </summary>
        [TestVariable("0d3a61e5-2755-4281-b68f-34b4766d4ff4")]
        public string varUsername
        {
            get { return repo.varUsername; }
            set { repo.varUsername = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varPassword.
        /// </summary>
        [TestVariable("9fd93e12-ad9e-464e-9daa-5db4c886228e")]
        public string varPassword
        {
            get { return repo.varPassword; }
            set { repo.varPassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AUT.username_tbx' at 48;9.", repo.AUT.username_tbxInfo, new RecordItemIndex(0));
            repo.AUT.username_tbx.Click("48;9");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varUsername' with focus on 'AUT.username_tbx'.", repo.AUT.username_tbxInfo, new RecordItemIndex(1));
            repo.AUT.username_tbx.PressKeys(varUsername);
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagValue=$varUsername) on item 'AUT.username_tbx'.", repo.AUT.username_tbxInfo, new RecordItemIndex(2));
                Validate.AttributeEqual(repo.AUT.username_tbxInfo, "TagValue", varUsername, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AUT.password_tbx' at 68;15.", repo.AUT.password_tbxInfo, new RecordItemIndex(3));
            repo.AUT.password_tbx.Click("68;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varPassword' with focus on 'AUT.password_tbx'.", repo.AUT.password_tbxInfo, new RecordItemIndex(4));
            repo.AUT.password_tbx.PressKeys(varPassword);
            Delay.Milliseconds(20);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagValue=$varPassword) on item 'AUT.password_tbx'.", repo.AUT.password_tbxInfo, new RecordItemIndex(5));
                Validate.AttributeEqual(repo.AUT.password_tbxInfo, "TagValue", varPassword, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AUT.login_btn' at 52;12.", repo.AUT.login_btnInfo, new RecordItemIndex(6));
            repo.AUT.login_btn.Click("52;12");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'AUT.logout_lnk'", repo.AUT.logout_lnkInfo, new ActionTimeout(10000), new RecordItemIndex(7));
            repo.AUT.logout_lnkInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'AUT.logout_lnk'.", repo.AUT.logout_lnkInfo, new RecordItemIndex(8));
            Validate.Exists(repo.AUT.logout_lnkInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
